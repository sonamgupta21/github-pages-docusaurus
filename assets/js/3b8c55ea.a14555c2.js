"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[217],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>c});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=n.createContext({}),p=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),u=p(a),c=r,g=u["".concat(s,".").concat(c)]||u[c]||m[c]||l;return a?n.createElement(g,i(i({ref:e},d),{},{components:a})):n.createElement(g,i({ref:e},d))}));function c(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9803:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:1,slug:"/"},i="Installation",o={unversionedId:"installation",id:"installation",title:"Installation",description:"Getting Started",source:"@site/docs/installation.md",sourceDirName:".",slug:"/",permalink:"/sigscalr-docs/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/"},sidebar:"tutorialSidebar",next:{title:"Ingestion",permalink:"/sigscalr-docs/ingestion"}},s={},p=[{value:"Getting Started",id:"getting-started",level:2},{value:"<strong>Helm / K8s </strong>",id:"helm--k8s-",level:4},{value:"<strong>Docker</strong>",id:"docker",level:4},{value:"<strong>Binary</strong>",id:"binary",level:4},{value:"Configurations",id:"configurations",level:2}],d={toc:p};function m(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("h2",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"SigScalr provides 100GB of circular retention for free and will automatically clean up older data that crosses the limit. "),(0,r.kt)("h4",{id:"helm--k8s-"},(0,r.kt)("strong",{parentName:"h4"},"Helm / K8s ")),(0,r.kt)("p",null,"SigScalr provides a easy to deploy helm chart that includes a fluentd daemonset that automatically ingests kubernetes logs."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add sigscalr-helm https://sigscalr.github.io/helm-chart\nhelm upgrade --install sigscalr sigscalr-helm/sigscalr\n")),(0,r.kt)("p",null,"Details for helm values can be found in our ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sigscalr/helm-chart"},"public helm chart repository")),(0,r.kt)("h4",{id:"docker"},(0,r.kt)("strong",{parentName:"h4"},"Docker")),(0,r.kt)("p",null,"The SigScalr backend is deployed independently of the UI.\nTo allow the UI to connect to the backend a docker network can be used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'wget https://sigscalr-configs.s3.amazonaws.com/1.1.31/server.yaml\ndocker pull public.ecr.aws/l3t9n5v5/sigscalr:1.1.31\nmkdir data\ndocker run -it --mount type=bind,source="$(pwd)"/data,target=/sigscalr/data \\\n    --mount type=bind,source="$(pwd)"/server.yaml,target=/sigscalr/server.yaml \\\n    -p 8081:8081 -p 80:80 public.ecr.aws/l3t9n5v5/sigscalr:1.1.31\n')),(0,r.kt)("p",null,"To be able to query data across restarts, set ",(0,r.kt)("inlineCode",{parentName:"p"},"ssInstanceName")," in server.yaml."),(0,r.kt)("p",null,"The target for the data directory mounting should be the same as the data directory (",(0,r.kt)("inlineCode",{parentName:"p"},"dataPath"),"configuration) in server.yaml"),(0,r.kt)("h4",{id:"binary"},(0,r.kt)("strong",{parentName:"h4"},"Binary")),(0,r.kt)("p",null,"SigScalr provides a single binary for the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Linux OS: os=linux, arch=arm64/amd64"),(0,r.kt)("li",{parentName:"ul"},"Mac OS:  os=darwin, arch=arm64/amd64")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://sigscalr-releases.s3.amazonaws.com/sigscalr-1.1.31-{os}-{arch}.tar.gz\ntar -xf sigscalr-1.1.31-{os}-{arch}.tar.gz\ncd sigscalr-1.1.31-{os}-{arch}/\n./sigscalr --config server.yaml\n")),(0,r.kt)("p",null,"Get data in SigScalr by ",(0,r.kt)("a",{parentName:"p",href:"ingestion"},"loading sample data"),", using our ",(0,r.kt)("a",{parentName:"p",href:"ingestion"},"supported ingestion methods"),", or ",(0,r.kt)("a",{parentName:"p",href:"integrations"},"integrating with your existing tools"),"."),(0,r.kt)("p",null,"!> Facing issues? ",(0,r.kt)("a",{parentName:"p",href:"https://join.slack.com/t/sigscalr-community/shared_invite/zt-1hjls1qqq-kgSdaXRyazfzMQuz4S0Ijg"},"Join our slack (use email to signup)")),(0,r.kt)("h2",{id:"configurations"},"Configurations"),(0,r.kt)("p",null,"Override default behavior by editing the configuration file"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Config Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"port"),(0,r.kt)("td",{parentName:"tr",align:null},"Port for SigScalr server"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"8081")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uiPort"),(0,r.kt)("td",{parentName:"tr",align:null},"Port for SigScalr UI server"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"8000")),(0,r.kt)("td",{parentName:"tr",align:null},"If not specified, the UI server will not be started")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dataPath"),(0,r.kt)("td",{parentName:"tr",align:null},"Path of directory to store data to and query from"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"./data"')),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"retentionDays"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of historical data to keep."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"90")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestampKey"),(0,r.kt)("td",{parentName:"tr",align:null},"Timestamp key to use"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"timestamp"')),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"licenseKeyPath"),(0,r.kt)("td",{parentName:"tr",align:null},"Path to the license key"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"./"')),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"esVersion"),(0,r.kt)("td",{parentName:"tr",align:null},"Version of ES / Kibana for backwards compatability"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"6.8.20"')),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"memoryThresholdPercent"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum percent of available RAM that SigScalr will try to use"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"80")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"baseLogDir"),(0,r.kt)("td",{parentName:"tr",align:null},"Directory to output logs to"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""')),(0,r.kt)("td",{parentName:"tr",align:null},"logs to stdout if ",(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"logFileRotationSizeMB"),(0,r.kt)("td",{parentName:"tr",align:null},"Size at which log rotation will be applied"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"100")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssInstanceName"),(0,r.kt)("td",{parentName:"tr",align:null},"Instance name override"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""')),(0,r.kt)("td",{parentName:"tr",align:null},"For ephemeral servers (docker, k8s) set this variable to persist data across restarts")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sigscalrHost"),(0,r.kt)("td",{parentName:"tr",align:null},"Address for SigScalr backend"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""')),(0,r.kt)("td",{parentName:"tr",align:null},"This config is only used if SigScalrUI is running independently")))))}m.isMDXComponent=!0}}]);